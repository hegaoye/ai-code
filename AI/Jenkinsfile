pipeline {
  agent {
    node {
      label 'maven'
    }

  }
  stages {
    stage('拉取代码') {
      steps {
        git(url: 'https://github.com/hegaoye/ai-code.git', credentialsId: 'github-id', branch: 'feature/create-docker', changelog: true, poll: false)
      }
    }
    stage('测试') {
      steps {
        container('maven') {
          sh 'mvn clean'
          sh 'mvn install'
        }

      }
    }
    stage('构建并推送镜像') {
      steps {
        container('maven') {
          sh 'mvn clean package'
          sh 'docker build -f AI/Dockerfile -t $REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:SNAPSHOT-$BUILD_NUMBER .'
          withCredentials([usernamePassword(credentialsId : 'dockerhub-id' ,passwordVariable : 'DOCKER_PASSWORD' ,usernameVariable : 'DOCKER_USERNAME' ,)]) {
            sh 'echo "$DOCKER_PASSWORD" | docker login $REGISTRY -u "$DOCKER_USERNAME" --password-stdin'
            sh 'docker push $REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:SNAPSHOT-$BUILD_NUMBER'
          }

        }

      }
    }
    stage('保存制品') {
      steps {
        archiveArtifacts 'AI/target/*.jar'
      }
    }
    stage('部署至 Dev 环境') {
      steps {
        input(message: '@admin  ', submitter: 'admin')
        kubernetesDeploy(enableConfigSubstitution: true, deleteResource: false, kubeconfigId: 'kubeconfig-id', configs: 'AI/k8s/**')
      }
    }
  }
}