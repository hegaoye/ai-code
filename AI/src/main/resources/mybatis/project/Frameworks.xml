<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="Frameworks">

    <resultMap id="rs_base" type="Frameworks">
        <result property="id" column="id"/>
        <result property="code" column="code"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="state" column="state"/>
    </resultMap>

    <!--查询表信息关联信息-->
    <resultMap id="rs_base_all" type="Frameworks" extends="rs_base">
        <collection property="frameworksConfigureTemplateList" column="{frameworksCode=code}" select="FrameworksConfigureTemplate.query"/>
    </resultMap>


    <!-- 用于select查询公用抽取的列 -->
    <sql id="Frameworks.columns">
		id,name,code,description,state
	</sql>

    <insert id="Frameworks.insert" useGeneratedKeys="true" keyProperty="id" parameterType="Frameworks">
        INSERT INTO `frameworks` (
        id ,
        code ,
        name ,
        description ,
        state
        ) VALUES (
        #{id} ,
        #{code} ,
        #{name} ,
        #{description} ,
        #{state}
        )
        <selectKey keyProperty="id" resultType="long">
            select LAST_INSERT_ID()
        </selectKey>
    </insert>

    <update id="Frameworks.update" parameterType="Frameworks">
        UPDATE `frameworks`
        <trim prefix="set" suffixOverrides=",">
            <if test="description!=null and description!=''">
                description = #{description} ,
            </if>
            <if test="state!=null and state!=''">
                state = #{state}
            </if>
        </trim>
        WHERE
        code = #{code}
    </update>

    <delete id="Frameworks.delete">
        DELETE FROM `frameworks`
        <include refid="Frameworks.where"/>
    </delete>

    <select id="Frameworks.load" resultMap="rs_base_all">
        SELECT
        <include refid="Frameworks.columns"/>
        FROM `frameworks`
        <include refid="Frameworks.where"/>
    </select>

    <sql id="Frameworks.where">
        <where>
            <if test="id!=null and id!=''">
                AND id = #{id}
            </if>
            <if test="code!=null and code!=''">
                AND code = #{code}
            </if>
            <if test="name!=null and name!=''">
                AND name = #{name}
            </if>
            <if test="description!=null and description!=''">
                AND description = #{description}
            </if>
            <if test="state!=null and state!=''">
                AND state = #{state}
            </if>
        </where>
    </sql>


    <select id="Frameworks.count" resultType="long">
        SELECT count(*) FROM `frameworks`
        <include refid="Frameworks.where"/>
    </select>


    <select id="Frameworks.query" resultMap="rs_base_all">
        SELECT
        <include refid="Frameworks.columns"/>
        FROM `frameworks`
        <include refid="Frameworks.where"/>

        <if test="sortColumns!=null and sortColumns!=''">
            ORDER BY ${sortColumns}
        </if>
    </select>


</mapper>

