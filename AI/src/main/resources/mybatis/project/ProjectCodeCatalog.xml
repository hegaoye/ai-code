<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="ProjectCodeCatalog">

    <resultMap id="rs_base" type="ProjectCodeCatalog">
        <result property="id" column="id"/>
        <result property="code" column="code"/>
        <result property="projectCode" column="projectCode"/>
        <result property="moduleCode" column="moduleCode"/>
        <result property="serviceModuleCode" column="serviceModuleCode"/>
        <result property="codeModelCode" column="codeModelCode"/>
        <result property="classInfoCode" column="classInfoCode"/>
        <result property="frameworksConfigureTemplateCode" column="frameworksConfigureTemplateCode"/>
        <result property="relativePath" column="relativePath"/>
        <result property="absolutePath" column="absolutePath"/>
        <result property="fileName" column="fileName"/>
        <result property="fileSuffix" column="fileSuffix"/>
        <result property="fileType" column="fileType"/>
        <result property="classPackage" column="classPackage"/>
        <result property="basePackage" column="basePackage"/>
    </resultMap>


    <!--查询表信息关联信息-->
    <resultMap id="rs_base_all" type="ProjectCodeCatalog" extends="rs_base">
        <association property="classInfo" column="{code=classInfoCode}" select="ClassInfo.load"/>
        <association property="projectCodeModel" column="{code=codeModelCode}" select="ProjectCodeModel.load"/>
    </resultMap>

    <!-- 用于select查询公用抽取的列 -->
    <sql id="ProjectCodeCatalog.columns">
		id,code,projectCode,moduleCode,serviceModuleCode,codeModelCode,classInfoCode,frameworksConfigureTemplateCode,relativePath,absolutePath,fileName,fileSuffix,fileType,classPackage,basePackage
	</sql>

    <insert id="ProjectCodeCatalog.insert" useGeneratedKeys="true" keyProperty="id" parameterType="ProjectCodeCatalog">
        INSERT INTO `project_code_catalog` (
        id ,
        code ,
        projectCode ,
        moduleCode ,
        serviceModuleCode ,
        codeModelCode ,
        classInfoCode ,
        frameworksConfigureTemplateCode ,
        relativePath ,
        absolutePath ,
        fileName ,
        fileSuffix ,
        fileType,
        classPackage,
        basePackage
        ) VALUES (
        #{id} ,
        #{code} ,
        #{projectCode} ,
        #{moduleCode} ,
        #{serviceModuleCode} ,
        #{codeModelCode} ,
        #{classInfoCode} ,
        #{frameworksConfigureTemplateCode} ,
        #{relativePath} ,
        #{absolutePath} ,
        #{fileName} ,
        #{fileSuffix} ,
        #{fileType},
        #{classPackage},
        #{basePackage}
        )
        <selectKey keyProperty="id" resultType="long">
            select LAST_INSERT_ID()
        </selectKey>
    </insert>

    <update id="ProjectCodeCatalog.update" parameterType="ProjectCodeCatalog">
        UPDATE `project_code_catalog`
        <trim prefix="set" suffixOverrides=",">
            <if test="relativePath!=null and relativePath!=''">
                relativePath = #{relativePath} ,
            </if>
            <if test="absolutePath!=null and absolutePath!=''">
                absolutePath = #{absolutePath} ,
            </if>
            <if test="fileName!=null and fileName!=''">
                fileName = #{fileName} ,
            </if>
            <if test="fileSuffix!=null and fileSuffix!=''">
                fileSuffix = #{fileSuffix} ,
            </if>
            <if test="fileType!=null and fileType!=''">
                fileType = #{fileType}
            </if>
            <if test="classPackage!=null and classPackage!=''">
                classPackage = #{classPackage}
            </if>
            <if test="basePackage!=null and basePackage!=''">
                basePackage = #{basePackage}
            </if>
            <if test="frameworksConfigureTemplateCode!=null and frameworksConfigureTemplateCode!=''">
                frameworksConfigureTemplateCode = #{frameworksConfigureTemplateCode}
            </if>
        </trim>
        WHERE
        code = #{code} AND
        projectCode = #{projectCode} AND
        moduleCode = #{moduleCode} AND
        serviceModuleCode = #{serviceModuleCode} AND
        codeModelCode = #{codeModelCode}
    </update>

    <delete id="ProjectCodeCatalog.delete">
        DELETE FROM `project_code_catalog`
        <include refid="ProjectCodeCatalog.where"/>
    </delete>

    <select id="ProjectCodeCatalog.load" resultMap="rs_base_all">
        SELECT
        <include refid="ProjectCodeCatalog.columns"/>
        FROM `project_code_catalog`
        <include refid="ProjectCodeCatalog.where"/>
    </select>

    <sql id="ProjectCodeCatalog.where">
        <where>
            <if test="id!=null and id!=''">
                AND id = #{id}
            </if>
            <if test="code!=null and code!=''">
                AND code = #{code}
            </if>
            <if test="projectCode!=null and projectCode!=''">
                AND projectCode = #{projectCode}
            </if>
            <if test="moduleCode!=null and moduleCode!=''">
                AND moduleCode = #{moduleCode}
            </if>
            <if test="serviceModuleCode!=null and serviceModuleCode!=''">
                AND serviceModuleCode = #{serviceModuleCode}
            </if>
            <if test="codeModelCode!=null and codeModelCode!=''">
                AND codeModelCode = #{codeModelCode}
            </if>
            <if test="classInfoCode!=null and classInfoCode!=''">
                AND classInfoCode = #{classInfoCode}
            </if>
            <if test="frameworksConfigureTemplateCode!=null and frameworksConfigureTemplateCode!=''">
                AND frameworksConfigureTemplateCode = #{frameworksConfigureTemplateCode}
            </if>
            <if test="relativePath!=null and relativePath!=''">
                AND relativePath = #{relativePath}
            </if>
            <if test="absolutePath!=null and absolutePath!=''">
                AND absolutePath = #{absolutePath}
            </if>
            <if test="fileName!=null and fileName!=''">
                AND fileName = #{fileName}
            </if>
            <if test="fileSuffix!=null and fileSuffix!=''">
                AND fileSuffix = #{fileSuffix}
            </if>
            <if test="fileType!=null and fileType!=''">
                AND fileType = #{fileType}
            </if>
            <if test="classPackage!=null and classPackage!=''">
                AND classPackage = #{classPackage}
            </if>
            <if test="basePackage!=null and basePackage!=''">
                AND basePackage = #{basePackage}
            </if>
        </where>
    </sql>


    <select id="ProjectCodeCatalog.count" resultType="long">
        SELECT count(*) FROM `project_code_catalog`
        <include refid="ProjectCodeCatalog.where"/>
    </select>


    <select id="ProjectCodeCatalog.query" resultMap="rs_base_all">
        SELECT
        <include refid="ProjectCodeCatalog.columns"/>
        FROM `project_code_catalog`
        <include refid="ProjectCodeCatalog.where"/>

        <if test="sortColumns!=null and sortColumns!=''">
            ORDER BY ${sortColumns}
        </if>
    </select>


</mapper>

