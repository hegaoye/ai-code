<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="Zoom">

    <resultMap id="rs_base" type="Zoom">
        <result property="id" column="id"/>
        <result property="zoomCode" column="zoomCode"/>
        <result property="hostId" column="hostId"/>
        <result property="apiKey" column="apiKey"/>
        <result property="apiSecret" column="apiSecret"/>
        <result property="state" column="state"/>
        <result property="zoomLogin" column="zoomLogin"/>
        <result property="zoomLoginPassword" column="zoomLoginPassword"/>
        <result property="updateTime" column="updateTime"/>
        <result property="vn" column="vn"/>
    </resultMap>

    <!-- 用于select查询公用抽取的列 -->
    <sql id="Zoom.columns">
		id,zoomCode,hostId,apiKey,apiSecret,state,zoomLogin,zoomLoginPassword,updateTime,vn
	</sql>

    <insert id="Zoom.insert" useGeneratedKeys="true" keyProperty="id" parameterType="Zoom">
        INSERT INTO Zoom (
        id ,
        zoomCode ,
        hostId ,
        apiKey ,
        apiSecret ,
        state ,
        zoomLogin ,
        zoomLoginPassword ,
        updateTime ,
        vn
        ) VALUES (
        #{id} ,
        #{zoomCode} ,
        #{hostId} ,
        #{apiKey} ,
        #{apiSecret} ,
        #{state} ,
        #{zoomLogin} ,
        #{zoomLoginPassword} ,
        #{updateTime} ,
        #{vn}
        )
        <selectKey keyProperty="id" resultType="long">
            select LAST_INSERT_ID()
        </selectKey>
    </insert>

    <update id="Zoom.update" parameterType="Zoom">
        UPDATE Zoom
        <trim prefix="set" suffixOverrides=",">
            <if test="hostId!=null and hostId!=''">
                hostId = #{hostId} ,
            </if>
            <if test="apiKey!=null and apiKey!=''">
                apiKey = #{apiKey} ,
            </if>
            <if test="apiSecret!=null and apiSecret!=''">
                apiSecret = #{apiSecret} ,
            </if>
            <if test="state!=null and state!=''">
                state = #{state} ,
            </if>
            <if test="zoomLogin!=null and zoomLogin!=''">
                zoomLogin = #{zoomLogin} ,
            </if>
            <if test="zoomLoginPassword!=null and zoomLoginPassword!=''">
                zoomLoginPassword = #{zoomLoginPassword} ,
            </if>
            <if test="updateTime!=null ">
                updateTime = #{updateTime} ,
            </if>
            <if test="vn!=null and vn!=''">
                vn = vn+1
            </if>
        </trim>

        WHERE
        zoomCode = #{zoomCode} and vn=#{vn}
    </update>

    <delete id="Zoom.delete">
        DELETE FROM Zoom WHERE
        zoomCode = #{zoomCode}
    </delete>

    <select id="Zoom.load" resultMap="rs_base">
        SELECT
        <include refid="Zoom.columns"/>
        FROM Zoom
        WHERE
        zoomCode = #{zoomCode}
    </select>

    <sql id="Zoom.where">
        <where>
            <if test="id!=null and id!=''">
                AND id = #{id}
            </if>
            <if test="zoomCode!=null and zoomCode!=''">
                AND zoomCode = #{zoomCode}
            </if>
            <if test="hostId!=null and hostId!=''">
                AND hostId = #{hostId}
            </if>
            <if test="apiKey!=null and apiKey!=''">
                AND apiKey = #{apiKey}
            </if>
            <if test="apiSecret!=null and apiSecret!=''">
                AND apiSecret = #{apiSecret}
            </if>
            <if test="state!=null and state!=''">
                AND state = #{state}
            </if>
            <if test="zoomLogin!=null and zoomLogin!=''">
                AND zoomLogin = #{zoomLogin}
            </if>
            <if test="zoomLoginPassword!=null and zoomLoginPassword!=''">
                AND zoomLoginPassword = #{zoomLoginPassword}
            </if>
            <if test="updateTimeBegin!=null ">
                AND updateTime >= #{updateTimeBegin}
            </if>
            <if test="updateTimeEnd!=null ">
                AND updateTime &lt;= #{updateTimeEnd}
            </if>
            <if test="vn!=null and vn!=''">
                AND vn = #{vn}
            </if>
        </where>
    </sql>


    <select id="Zoom.count" resultType="long">
        SELECT count(1) FROM Zoom
        <include refid="Zoom.where"/>
    </select>


    <select id="Zoom.query" resultMap="rs_base">
        SELECT
        <include refid="Zoom.columns"/>
        FROM Zoom
        <include refid="Zoom.where"/>
        ORDER BY zoomCode DESC
    </select>

    <!--根据zoomCode查询zoom-->
    <select id="Zoom.loadBy" resultMap="rs_base">
        SELECT
        <include refid="Zoom.columns"/>
        FROM Zoom
        <include refid="Zoom.where"/>
    </select>


</mapper>

