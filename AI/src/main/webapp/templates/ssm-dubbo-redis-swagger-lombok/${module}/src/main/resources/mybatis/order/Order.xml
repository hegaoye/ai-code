<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="Order">

    <resultMap id="rs_base" type="Order">
        <result property="id" column="id"/>
        <result property="orderNo" column="orderNo"/>
        <result property="consumerCode" column="consumerCode"/>
        <result property="consumerName" column="consumerName"/>
        <result property="consumerEmail" column="consumerEmail"/>
        <result property="payType" column="payType"/>
        <result property="payedTime" column="payedTime"/>
        <result property="goodsPrice" column="goodsPrice"/>
        <result property="orderPrice" column="orderPrice"/>
        <result property="isAssess" column="isAssess"/>
        <result property="state" column="state"/>
        <result property="refundType" column="refundType"/>
        <result property="deleteState" column="deleteState"/>
        <result property="refundMoney" column="refundMoney"/>
        <result property="timeZone" column="timeZone"/>
        <result property="paypalId" column="paypalId"/>
        <result property="delayTime" column="delayTime"/>
        <result property="orderSource" column="orderSource"/>
        <result property="createTime" column="createTime"/>
        <result property="updateTime" column="updateTime"/>
        <result property="vn" column="vn"/>
    </resultMap>

    <!--所有信息-->
    <resultMap id="rs_base_all" type="Order" extends="rs_base">
        <collection property="orderGoodses" column="{orderNo=orderNo}" select="OrderGoods.query"/>
        <collection property="orderPayments" column="{orderNo=orderNo}" select="OrderPayment.query"/>
        <collection property="orderTraces" column="{orderNo=orderNo}" select="OrderTrace.query"/>
    </resultMap>

    <!-- 用于select查询公用抽取的列 -->
    <sql id="Order.columns">
		id,orderNo,consumerCode,consumerName,consumerEmail,payType,payedTime,timeZone,paypalId,goodsPrice,orderPrice,isAssess,state,refundType,deleteState,refundMoney,delayTime,orderSource,createTime,updateTime,vn
	</sql>

    <insert id="Order.insert" useGeneratedKeys="true" keyProperty="id" parameterType="Order">
        INSERT INTO `Order` (
        id ,
        orderNo ,
        consumerCode ,
        consumerName ,
        consumerEmail ,
        payType ,
        payedTime ,
        goodsPrice ,
        orderPrice ,
        isAssess ,
        state ,
        refundType ,
        deleteState ,
        refundMoney ,
        timeZone ,
        paypalId ,
        delayTime ,
        orderSource ,
        createTime,
        updateTime,
        vn
        ) VALUES (
        #{id} ,
        #{orderNo} ,
        #{consumerCode} ,
        #{consumerName} ,
        #{consumerEmail} ,
        #{payType} ,
        #{payedTime} ,
        #{goodsPrice} ,
        #{orderPrice} ,
        #{isAssess} ,
        #{state} ,
        #{refundType} ,
        #{deleteState} ,
        #{refundMoney} ,
        #{timeZone} ,
        #{paypalId} ,
        #{delayTime} ,
        #{orderSource} ,
        #{createTime},
        #{updateTime} ,
        #{vn}
        )
        <selectKey keyProperty="id" resultType="long">
            select LAST_INSERT_ID()
        </selectKey>
    </insert>

    <update id="Order.update" parameterType="Order">
        UPDATE `Order`

        <trim prefix="set" suffixOverrides=",">
            <if test="consumerCode!=null and consumerCode!=''">
                consumerCode = #{consumerCode} ,
            </if>
            <if test="consumerName!=null and consumerName!=''">
                consumerName = #{consumerName} ,
            </if>
            <if test="consumerEmail!=null and consumerEmail!=''">
                consumerEmail = #{consumerEmail} ,
            </if>
            <if test="payType!=null and payType!=''">
                payType = #{payType} ,
            </if>
            <if test="payedTime!=null ">
                payedTime = #{payedTime} ,
            </if>
            <if test="goodsPrice!=null and goodsPrice!=''">
                goodsPrice = #{goodsPrice} ,
            </if>
            <if test="orderPrice!=null and orderPrice!=''">
                orderPrice = #{orderPrice} ,
            </if>
            <if test="isAssess!=null and isAssess!=''">
                isAssess = #{isAssess} ,
            </if>
            <if test="state!=null and state!=''">
                state = #{state} ,
            </if>
            <if test="refundType!=null and refundType!=''">
                refundType = #{refundType} ,
            </if>
            <if test="deleteState!=null and deleteState!=''">
                deleteState = #{deleteState} ,
            </if>
            <if test="refundMoney!=null and refundMoney!=''">
                refundMoney = #{refundMoney} ,
            </if>
            <if test="timeZone!=null and timeZone!=''">
                timeZone = #{timeZone} ,
            </if>
            <if test="paypalId!=null and paypalId!=''">
                paypalId = #{paypalId} ,
            </if>
            <if test="delayTime!=null and delayTime!=''">
                delayTime = #{delayTime} ,
            </if>
            <if test="orderSource!=null and orderSource!=''">
                orderSource = #{orderSource} ,
            </if>
            <if test="createTime!=null ">
                createTime = #{createTime},
            </if>
            <if test="updateTime!=null ">
                updateTime = #{updateTime},
            </if>
            <if test="vn!=null and vn!=''">
                vn =vn+1,
            </if>
        </trim>

        WHERE
        orderNo = #{orderNo} and vn=#{vn}
    </update>

    <delete id="Order.delete">
        DELETE FROM `Order` WHERE
        orderNo = #{orderNo}
    </delete>

    <select id="Order.load" resultMap="rs_base">
        SELECT
        <include refid="Order.columns"/>
        FROM `Order`
        <include refid="Order.where"/>
    </select>

    <sql id="Order.where">
        <where>
            <if test="id!=null and id!=''">
                AND id = #{id}
            </if>
            <if test="orderNo!=null and orderNo!=''">
                AND orderNo = #{orderNo}
            </if>
            <if test="consumerCode!=null and consumerCode!=''">
                AND consumerCode = #{consumerCode}
            </if>
            <if test="consumerName!=null and consumerName!=''">
                AND consumerName = #{consumerName}
            </if>
            <if test="consumerEmail!=null and consumerEmail!=''">
                AND consumerEmail = #{consumerEmail}
            </if>
            <if test="payType!=null and payType!=''">
                AND payType = #{payType}
            </if>
            <if test="payedTimeBegin!=null ">
                AND payedTime >= #{payedTimeBegin}
            </if>
            <if test="payedTimeEnd!=null ">
                AND payedTime &lt;= #{payedTimeEnd}
            </if>
            <if test="goodsPrice!=null and goodsPrice!=''">
                AND goodsPrice = #{goodsPrice}
            </if>
            <if test="orderPrice!=null and orderPrice!=''">
                AND orderPrice = #{orderPrice}
            </if>
            <if test="isAssess!=null and isAssess!=''">
                AND isAssess = #{isAssess}
            </if>
            <if test="state!=null and state!=''">
                AND state = #{state}
            </if>
            <if test="refundType!=null and refundType!=''">
                AND refundType = #{refundType}
            </if>
            <if test="deleteState!=null and deleteState!=''">
                AND deleteState = #{deleteState}
            </if>
            <if test="refundMoney!=null and refundMoney!=''">
                AND refundMoney = #{refundMoney}
            </if>
            <if test="timeZone!=null and timeZone!=''">
                AND timeZone = #{timeZone}
            </if>
            <if test="paypalId!=null and paypalId!=''">
                AND paypalId = #{paypalId}
            </if>
            <if test="delayTimeBegin!=null ">
                AND delayTime >= #{delayTimeBegin}
            </if>
            <if test="delayTimeEnd!=null ">
                AND delayTime &lt;= #{delayTimeEnd}
            </if>
            <if test="orderSource!=null and orderSource!=''">
                AND orderSource = #{orderSource}
            </if>
            <if test="createTimeBegin!=null ">
                AND createTime >= #{createTimeBegin}
            </if>
            <if test="createTimeEnd!=null ">
                AND createTime &lt;= #{createTimeEnd}
            </if>
            <if test="updateTime!=null ">
                AND updateTime = #{updateTime}
            </if>
            <if test="vn!=null and vn!=''">
                AND vn = #{vn}
            </if>
        </where>
    </sql>


    <select id="Order.count" resultType="int">
        SELECT count(1) FROM `Order`
        <include refid="Order.where"/>
    </select>


    <select id="Order.query" resultMap="rs_base_all">
        SELECT
        <include refid="Order.columns"/>
        FROM `Order`
        <include refid="Order.where"/>
        ORDER BY orderNo DESC
    </select>


    <!--取消订单-->
    <update id="Order.cancelOrder" parameterType="map">
        UPDATE `Order` SET
        state = #{state} ,
        updateTime = #{updateTime} ,
        vn =vn+1
        WHERE
        orderNo = #{orderNo}
        AND state=#{oldState}
        AND vn=#{vn}
    </update>

    <!--加载一个订单的详情(加载所有内容,包含：支付流水，订单商品，订单追踪)-->
    <select id="Order.loadOrderDetail" resultMap="rs_base_all">
        SELECT
        <include refid="Order.columns"/>
        FROM `Order`
        <include refid="Order.where"/>
    </select>

</mapper>

