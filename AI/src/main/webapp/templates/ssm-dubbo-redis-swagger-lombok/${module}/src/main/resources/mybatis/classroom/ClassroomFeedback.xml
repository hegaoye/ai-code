<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="ClassroomFeedback">

    <resultMap id="rs_base" type="ClassroomFeedback">
        <result property="id" column="id"/>
        <result property="classroomCode" column="classroomCode"/>
        <result property="tutorCode" column="tutorCode"/>
        <result property="studentCode" column="studentCode"/>
        <result property="studentName" column="studentName"/>
        <result property="feedbackMan" column="feedbackMan"/>
        <result property="feedback" column="feedback"/>
        <result property="createTime" column="createTime"/>
        <result property="starLevel" column="starLevel"/>
    </resultMap>

    <resultMap id="rs_base_feedbackTotal" type="ClassroomFeedback">
        <result property="feedbackTotal" column="feedbackTotal"/>
    </resultMap>


    <!-- 用于select查询公用抽取的列 -->
    <sql id="ClassroomFeedback.columns">
	   
		id,classroomCode,tutorCode,studentCode,studentName,feedback,feedbackMan,createTime,starLevel
	   
	</sql>

    <insert id="ClassroomFeedback.insert" useGeneratedKeys="true" keyProperty="id" parameterType="ClassroomFeedback">
        INSERT INTO classroom_feedback (
        id ,
        classroomCode ,
        tutorCode ,
        studentCode ,
        studentName ,
        feedbackMan ,
        feedback ,
        createTime ,
        starLevel
        ) VALUES (
        #{id} ,
        #{classroomCode} ,
        #{tutorCode} ,
        #{studentCode} ,
        #{studentName} ,
        #{feedbackMan} ,
        #{feedback} ,
        #{createTime} ,
        #{starLevel}
        )
        <selectKey keyProperty="id" resultType="long">
            select LAST_INSERT_ID()
        </selectKey>
    </insert>

    <update id="ClassroomFeedback.update" parameterType="ClassroomFeedback">
   
        UPDATE classroom_feedback SET
	        classroomCode = #{classroomCode} ,
	        tutorCode = #{tutorCode} ,
	        studentCode = #{studentCode} ,
	        studentName = #{studentName} ,
	        feedbackMan = #{feedbackMan} ,
	        feedback = #{feedback} ,
	        createTime = #{createTime} ,
	        starLevel = #{starLevel} 
        WHERE 
	        id = #{id} 
   
	</update>

    <delete id="ClassroomFeedback.delete">
   
        DELETE FROM classroom_feedback WHERE
        id = #{id} 
   
    </delete>

    <select id="ClassroomFeedback.load" resultMap="rs_base">
        SELECT
        <include refid="ClassroomFeedback.columns"/>

        FROM classroom_feedback
        WHERE
        id = #{id}

    </select>

    <sql id="ClassroomFeedback.where">
        <where>
            <if test="id!=null and id!=''">
                AND id = #{id}
            </if>
            <if test="classroomCode!=null and classroomCode!=''">
                AND classroomCode = #{classroomCode}
            </if>
            <if test="tutorCode!=null and tutorCode!=''">
                AND tutorCode = #{tutorCode}
            </if>
            <if test="studentCode!=null and studentCode!=''">
                AND studentCode = #{studentCode}
            </if>
            <if test="studentName!=null and studentName!=''">
                AND studentName = #{studentName}
            </if>
            <if test="feedbackMan!=null and feedbackMan!=''">
                AND feedbackMan = #{feedbackMan}
            </if>
            <if test="feedback!=null and feedback!=''">
                AND feedback = #{feedback}
            </if>
            <if test="createTimeBegin!=null ">
                AND createTime >= #{createTimeBegin}
            </if>
            <if test="createTimeEnd!=null ">
                AND createTime &lt;= #{createTimeEnd}
            </if>
            <if test="starLevel!=null and starLevel!=''">
                AND starLevel = #{starLevel}
            </if>
        </where>
    </sql>


    <select id="ClassroomFeedback.count" resultType="int">
        SELECT count(1) FROM classroom_feedback
        <include refid="ClassroomFeedback.where"/>
    </select>

    <select id="ClassroomFeedback.countFeedbackTotal" resultMap="rs_base_feedbackTotal">
        SELECT count(1) as feedbackTotal FROM classroom_feedback
        <include refid="ClassroomFeedback.where"/>
    </select>


    <select id="ClassroomFeedback.query" resultMap="rs_base">
        SELECT
        <include refid="ClassroomFeedback.columns"/>
        FROM classroom_feedback
        <include refid="ClassroomFeedback.where"/>

        <if test="sortColumns!=null and sortColumns!=''">
            ORDER BY ${sortColumns}
        </if>
    </select>

    <!--查询课堂反馈集合-->
    <select id="ClassroomFeedback.classroomFeedbacks" resultMap="rs_base">
        SELECT
        <include refid="ClassroomFeedback.columns"/>
        FROM classroom_feedback

        <where>
            <if test="classroomCode!=null and classroomCode!=''">
                AND classroomCode = #{classroomCode}
            </if>
            <if test="tutorCode!=null and tutorCode!=''">
                AND tutorCode = #{tutorCode}
            </if>
            <if test="studentCode!=null and studentCode!=''">
                AND studentCode = #{studentCode}
            </if>
            <if test="feedbackMan!=null and feedbackMan!=''">
                AND feedbackMan = #{feedbackMan}
            </if>
            <if test="createTimeBegin!=null ">
                AND createTime >= #{createTimeBegin}
            </if>
            <if test="createTimeEnd!=null ">
                AND createTime &lt;= #{createTimeEnd}
            </if>
        </where>
        ORDER BY createTime DESC
    </select>


</mapper>

