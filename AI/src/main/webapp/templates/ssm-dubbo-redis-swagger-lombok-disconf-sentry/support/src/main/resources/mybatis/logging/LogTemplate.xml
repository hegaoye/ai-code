<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="LogTemplate">

	<resultMap id="rs_base" type="LogTemplate">
        <result property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="roleId" column="role_id"/>
        <result property="detail" column="detail"/>
        <result property="ip" column="ip"/>
        <result property="createTime" column="create_time"/>
        <result property="portalType" column="portal_type"/>
        <result property="clientType" column="client_type"/>
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="LogTemplate.columns">
	    <![CDATA[
		id,user_id,role_id,detail,ip,create_time,portal_type,client_type
	    ]]>
	</sql>

	<insert id="LogTemplate.insert" useGeneratedKeys="true" keyProperty="id" parameterType="LogTemplate">
        INSERT INTO log_template (
        	id ,
        	user_id ,
        	role_id ,
        	detail ,
        	ip ,
        	create_time ,
        	portal_type ,
        	client_type 
        ) VALUES (
        	${r'#{id}'} ,
        	${r'#{userId}'} ,
        	${r'#{roleId}'} ,
        	${r'#{detail}'} ,
        	${r'#{ip}'} ,
        	${r'#{createTime}'} ,
        	${r'#{portalType}'} ,
        	${r'#{clientType}'} 
        )
		<selectKey keyProperty="id" resultType="long">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>

	<update id="LogTemplate.update" parameterType="LogTemplate">
        UPDATE log_template SET
	        user_id = ${r'#{userId}'} ,
	        role_id = ${r'#{roleId}'} ,
	        detail = ${r'#{detail}'} ,
	        ip = ${r'#{ip}'} ,
	        create_time = ${r'#{createTime}'} ,
	        portal_type = ${r'#{portalType}'} ,
	        client_type = ${r'#{clientType}'} 
			where
				<if test="id!=null">
				id = ${r'#{id}'}
				</if>
	</update>

    <delete id="LogTemplate.delete">
        DELETE FROM log_template
		where
       		<if test="id!=null">
				id = ${r'#{id}'}
			</if>
    </delete>

    <select id="LogTemplate.load" resultMap="rs_base">
		SELECT <include refid="LogTemplate.columns" />
		    FROM log_template
				where id = ${r'#{id}'}

	</select>

	<sql id="LogTemplate.where">
		<where>
			<if test="id!=null">
				AND id = ${r'#{id}'}
			</if>
			<if test="userId!=null and userId!=''">
				AND user_id = ${r'#{userId}'}
			</if>
			<if test="roleId!=null and roleId!=''">
				AND role_id = ${r'#{roleId}'}
			</if>
			<if test="detail!=null and detail!=''">
				AND detail = ${r'#{detail}'}
			</if>
			<if test="ip!=null and ip!=''">
				AND ip = ${r'#{ip}'}
			</if>
			<if test="createTimeBegin!=null ">
				AND create_time >= ${r'#{createTimeBegin}'}
		   </if>
			<if test="createTimeEnd!=null ">
				AND create_time &lt;= ${r'#{createTimeEnd}'}
		   </if>
			<if test="portalType!=null and portalType!=''">
				AND portal_type = ${r'#{portalType}'}
			</if>
			<if test="clientType!=null and clientType!=''">
				AND client_type = ${r'#{clientType}'}
			</if>
		</where>
	</sql>



    <select id="LogTemplate.count" resultType="int">
        SELECT count(1) FROM log_template
		<include refid="LogTemplate.where"/>
    </select>


    <select id="LogTemplate.query" resultMap="rs_base">
    	SELECT <include refid="LogTemplate.columns" />
	    FROM log_template
		<include refid="LogTemplate.where"/>

		<if test="sortColumns!=null and sortColumns!=''">
			ORDER BY ${r'${sortColumns}'}
		</if>
    </select>


</mapper>

